{"version":3,"sources":["../node_modules/browser-pack/_prelude.js","../lib/browser.js","../lib/NuboNoseDetector.js","../lib/complexTypes/index.js","../lib/complexTypes/NoseInfo.js"],"names":["require","noop","error","result","console","trace","NuboNoseDetector","super_","call","this","checkNuboNoseDetector","key","value","ChecktypeError","inherits","kurentoClient","disguise","checkType","Transaction","TransactionsManager","Filter","register","abstracts","prototype","activateServerEvents","activate","time","callback","transaction","arguments","Array","shift","apply","undefined","required","params","bind","_invoke","detectByEvent","event","multiScaleFactor","scaleFactor","processXevery4Frames","xper4","sendMetaData","metaData","showNoses","viewNoses","widthToProcess","width","constructorParams","mediaPipeline","type","events","concat","module","exports","check","NoseInfo","noseInfoDict","name","x","y","height","Object","defineProperties","writable","enumerable","checkNoseInfo","ComplexType","complexTypes","__module__","__type__"],"mappings":"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","file":"bundle.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/**\n * Loader for the kurento-module-nubonosedetector package on the browser\n */\n\nrequire('.');\n","/* Autogenerated with Kurento Idl */\n\n/*\n * (C) Copyright 2013-2015 Kurento (http://kurento.org/)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar inherits = require('inherits');\n\nvar kurentoClient = require('kurento-client');\n\nvar disguise = kurentoClient.disguise;\n\nvar checkType      = kurentoClient.checkType;\nvar ChecktypeError = checkType.ChecktypeError;\n\n\nvar Transaction = kurentoClient.TransactionsManager.Transaction;\n\nvar Filter = kurentoClient.register.abstracts.Filter;\n\n\nfunction noop(error, result) {\n  if (error) console.trace(error);\n\n  return result\n};\n\n\n/**\n * Create an element\n *\n * @classdesc\n *  NuboNoseDetector interface. Documentation about the module\n *\n * @extends module:core/abstracts.Filter\n *\n * @constructor module:nubonosedetector.NuboNoseDetector\n *\n * @fires {@link module:nubonosedetector#event:OnNose OnNose}\n */\nfunction NuboNoseDetector(){\n  NuboNoseDetector.super_.call(this);\n};\ninherits(NuboNoseDetector, Filter);\n\n\n//\n// Public methods\n//\n\n/**\n * The events will be launched to the server with the information about the nose\n *\n * @alias module:nubonosedetector.NuboNoseDetector.activateServerEvents\n *\n * @param {external:Integer} activate\n *  1=>activate it, 0 desactivated\n *\n * @param {external:Integer} time\n *  the frequency in ms to send the events\n *\n * @param {module:nubonosedetector.NuboNoseDetector~activateServerEventsCallback} [callback]\n *\n * @return {external:Promise}\n */\nNuboNoseDetector.prototype.activateServerEvents = function(activate, time, callback){\n  var transaction = (arguments[0] instanceof Transaction)\n                  ? Array.prototype.shift.apply(arguments)\n                  : undefined;\n\n  checkType('int', 'activate', activate, {required: true});\n  checkType('int', 'time', time, {required: true});\n\n  var params = {\n    activate: activate,\n    time: time\n  };\n\n  callback = (callback || noop).bind(this)\n\n  return disguise(this._invoke(transaction, 'activateServerEvents', params, callback), this)\n};\n/**\n * @callback module:nubonosedetector.NuboNoseDetector~activateServerEventsCallback\n * @param {external:Error} error\n */\n\n/**\n * To indicate  the algorithm if process all the images or only when it receives\n *\n * @alias module:nubonosedetector.NuboNoseDetector.detectByEvent\n *\n * @param {external:Integer} event\n *  0 (default) => process all the frames without constraints; 1 => process only\n *\n * @param {module:nubonosedetector.NuboNoseDetector~detectByEventCallback} [callback]\n *\n * @return {external:Promise}\n */\nNuboNoseDetector.prototype.detectByEvent = function(event, callback){\n  var transaction = (arguments[0] instanceof Transaction)\n                  ? Array.prototype.shift.apply(arguments)\n                  : undefined;\n\n  checkType('int', 'event', event, {required: true});\n\n  var params = {\n    event: event\n  };\n\n  callback = (callback || noop).bind(this)\n\n  return disguise(this._invoke(transaction, 'detectByEvent', params, callback), this)\n};\n/**\n * @callback module:nubonosedetector.NuboNoseDetector~detectByEventCallback\n * @param {external:Error} error\n */\n\n/**\n * Specify how much the image size is reduced at each haar image \n *\n * @alias module:nubonosedetector.NuboNoseDetector.multiScaleFactor\n *\n * @param {external:Integer} scaleFactor\n *  5-50 (25 default)\n *\n * @param {module:nubonosedetector.NuboNoseDetector~multiScaleFactorCallback} [callback]\n *\n * @return {external:Promise}\n */\nNuboNoseDetector.prototype.multiScaleFactor = function(scaleFactor, callback){\n  var transaction = (arguments[0] instanceof Transaction)\n                  ? Array.prototype.shift.apply(arguments)\n                  : undefined;\n\n  checkType('int', 'scaleFactor', scaleFactor, {required: true});\n\n  var params = {\n    scaleFactor: scaleFactor\n  };\n\n  callback = (callback || noop).bind(this)\n\n  return disguise(this._invoke(transaction, 'multiScaleFactor', params, callback), this)\n};\n/**\n * @callback module:nubonosedetector.NuboNoseDetector~multiScaleFactorCallback\n * @param {external:Error} error\n */\n\n/**\n * process x every 4 frames\n *\n * @alias module:nubonosedetector.NuboNoseDetector.processXevery4Frames\n *\n * @param {external:Integer} xper4\n *  1,2,3,4 (default) => process x frames every 4 frames\n *\n * @param {module:nubonosedetector.NuboNoseDetector~processXevery4FramesCallback} [callback]\n *\n * @return {external:Promise}\n */\nNuboNoseDetector.prototype.processXevery4Frames = function(xper4, callback){\n  var transaction = (arguments[0] instanceof Transaction)\n                  ? Array.prototype.shift.apply(arguments)\n                  : undefined;\n\n  checkType('int', 'xper4', xper4, {required: true});\n\n  var params = {\n    xper4: xper4\n  };\n\n  callback = (callback || noop).bind(this)\n\n  return disguise(this._invoke(transaction, 'processXevery4Frames', params, callback), this)\n};\n/**\n * @callback module:nubonosedetector.NuboNoseDetector~processXevery4FramesCallback\n * @param {external:Error} error\n */\n\n/**\n * The noses  detected (x,y,width,height) are sent as metadata \n *\n * @alias module:nubonosedetector.NuboNoseDetector.sendMetaData\n *\n * @param {external:Integer} metaData\n *  0 (default) => metadata are not sent; 1 => metadata are sent\n *\n * @param {module:nubonosedetector.NuboNoseDetector~sendMetaDataCallback} [callback]\n *\n * @return {external:Promise}\n */\nNuboNoseDetector.prototype.sendMetaData = function(metaData, callback){\n  var transaction = (arguments[0] instanceof Transaction)\n                  ? Array.prototype.shift.apply(arguments)\n                  : undefined;\n\n  checkType('int', 'metaData', metaData, {required: true});\n\n  var params = {\n    metaData: metaData\n  };\n\n  callback = (callback || noop).bind(this)\n\n  return disguise(this._invoke(transaction, 'sendMetaData', params, callback), this)\n};\n/**\n * @callback module:nubonosedetector.NuboNoseDetector~sendMetaDataCallback\n * @param {external:Error} error\n */\n\n/**\n * Show or Hide the noses in the video stream\n *\n * @alias module:nubonosedetector.NuboNoseDetector.showNoses\n *\n * @param {external:Integer} viewNoses\n *  Determines wheter the detected noses will be displayed or not\n *\n * @param {module:nubonosedetector.NuboNoseDetector~showNosesCallback} [callback]\n *\n * @return {external:Promise}\n */\nNuboNoseDetector.prototype.showNoses = function(viewNoses, callback){\n  var transaction = (arguments[0] instanceof Transaction)\n                  ? Array.prototype.shift.apply(arguments)\n                  : undefined;\n\n  checkType('int', 'viewNoses', viewNoses, {required: true});\n\n  var params = {\n    viewNoses: viewNoses\n  };\n\n  callback = (callback || noop).bind(this)\n\n  return disguise(this._invoke(transaction, 'showNoses', params, callback), this)\n};\n/**\n * @callback module:nubonosedetector.NuboNoseDetector~showNosesCallback\n * @param {external:Error} error\n */\n\n/**\n * this will be the width of the image that the algorithm is going to process to\n *\n * @alias module:nubonosedetector.NuboNoseDetector.widthToProcess\n *\n * @param {external:Integer} width\n *  160,320 (default),480,640\n *\n * @param {module:nubonosedetector.NuboNoseDetector~widthToProcessCallback} [callback]\n *\n * @return {external:Promise}\n */\nNuboNoseDetector.prototype.widthToProcess = function(width, callback){\n  var transaction = (arguments[0] instanceof Transaction)\n                  ? Array.prototype.shift.apply(arguments)\n                  : undefined;\n\n  checkType('int', 'width', width, {required: true});\n\n  var params = {\n    width: width\n  };\n\n  callback = (callback || noop).bind(this)\n\n  return disguise(this._invoke(transaction, 'widthToProcess', params, callback), this)\n};\n/**\n * @callback module:nubonosedetector.NuboNoseDetector~widthToProcessCallback\n * @param {external:Error} error\n */\n\n\n/**\n * @alias module:nubonosedetector.NuboNoseDetector.constructorParams\n *\n * @property {module:core.MediaPipeline} mediaPipeline\n *  the parent {@link module:core.MediaPipeline MediaPipeline}\n */\nNuboNoseDetector.constructorParams = {\n  mediaPipeline: {\n    type: 'kurento.MediaPipeline',\n    required: true\n  }\n};\n\n/**\n * @alias module:nubonosedetector.NuboNoseDetector.events\n *\n * @extends module:core/abstracts.Filter.events\n */\nNuboNoseDetector.events = Filter.events.concat(['OnNose']);\n\n\n/**\n * Checker for {@link module:nubonosedetector.NuboNoseDetector}\n *\n * @memberof module:nubonosedetector\n *\n * @param {external:String} key\n * @param {module:nubonosedetector.NuboNoseDetector} value\n */\nfunction checkNuboNoseDetector(key, value)\n{\n  if(!(value instanceof NuboNoseDetector))\n    throw ChecktypeError(key, NuboNoseDetector, value);\n};\n\n\nmodule.exports = NuboNoseDetector;\n\nNuboNoseDetector.check = checkNuboNoseDetector;\n","/* Autogenerated with Kurento Idl */\n\n/*\n * (C) Copyright 2013-2015 Kurento (http://kurento.org/)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Media API for the Kurento Web SDK\n *\n * @module nubonosedetector/complexTypes\n *\n * @copyright 2013-2015 Kurento (http://kurento.org/)\n * @license ALv2\n */\n\nvar NoseInfo = require('./NoseInfo');\n\n\nexports.NoseInfo = NoseInfo;\n","/* Autogenerated with Kurento Idl */\n\n/*\n * (C) Copyright 2013-2015 Kurento (http://kurento.org/)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar inherits = require('inherits');\n\nvar kurentoClient = require('kurento-client');\n\nvar checkType = kurentoClient.checkType;\nvar ChecktypeError = checkType.ChecktypeError;\n\nvar ComplexType = kurentoClient.register.complexTypes.ComplexType;\n\n\n/**\n * NoseInfo contains information about the detected noses\n *\n * @constructor module:nubonosedetector/complexTypes.NoseInfo\n *\n * @property {external:String} name\n *  This value contains the word nose in order to identify the register\n * @property {external:Integer} x\n *  represent the x value of the upper left corner of the nose \n * @property {external:Integer} y\n *  represent the y value of the upper left corner of the nose \n * @property {external:Integer} height\n *  Represent the height of the detected nose\n * @property {external:Integer} width\n *  Represent the width of the detected nose\n */\nfunction NoseInfo(noseInfoDict){\n  if(!(this instanceof NoseInfo))\n    return new NoseInfo(noseInfoDict)\n\n  noseInfoDict = noseInfoDict || {}\n\n  // Check noseInfoDict has the required fields\n  checkType('String', 'noseInfoDict.name', noseInfoDict.name, {required: true});\n  checkType('int', 'noseInfoDict.x', noseInfoDict.x, {required: true});\n  checkType('int', 'noseInfoDict.y', noseInfoDict.y, {required: true});\n  checkType('int', 'noseInfoDict.height', noseInfoDict.height, {required: true});\n  checkType('int', 'noseInfoDict.width', noseInfoDict.width, {required: true});\n\n  // Init parent class\n  NoseInfo.super_.call(this, noseInfoDict)\n\n  // Set object properties\n  Object.defineProperties(this, {\n    name: {\n      writable: true,\n      enumerable: true,\n      value: noseInfoDict.name\n    },\n    x: {\n      writable: true,\n      enumerable: true,\n      value: noseInfoDict.x\n    },\n    y: {\n      writable: true,\n      enumerable: true,\n      value: noseInfoDict.y\n    },\n    height: {\n      writable: true,\n      enumerable: true,\n      value: noseInfoDict.height\n    },\n    width: {\n      writable: true,\n      enumerable: true,\n      value: noseInfoDict.width\n    }\n  })\n}\ninherits(NoseInfo, ComplexType)\n\n// Private identifiers to allow re-construction of the complexType on the server\n// They need to be enumerable so JSON.stringify() can access to them\nObject.defineProperties(NoseInfo.prototype, {\n  __module__: {\n    enumerable: true,\n    value: \"nubonosedetector\"\n  },\n  __type__: {\n    enumerable: true,\n    value: \"NoseInfo\"\n  }\n})\n\n/**\n * Checker for {@link module:nubonosedetector/complexTypes.NoseInfo}\n *\n * @memberof module:nubonosedetector/complexTypes\n *\n * @param {external:String} key\n * @param {module:nubonosedetector/complexTypes.NoseInfo} value\n */\nfunction checkNoseInfo(key, value)\n{\n  if(!(value instanceof NoseInfo))\n    throw ChecktypeError(key, NoseInfo, value);\n};\n\n\nmodule.exports = NoseInfo;\n\nNoseInfo.check = checkNoseInfo;\n"]}