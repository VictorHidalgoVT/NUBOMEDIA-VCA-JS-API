{"version":3,"sources":["../node_modules/browser-pack/_prelude.js","../lib/browser.js","../lib/NuboFaceDetector.js","../lib/complexTypes/index.js","../lib/complexTypes/FaceInfo.js"],"names":["require","noop","error","result","console","trace","NuboFaceDetector","super_","call","this","checkNuboFaceDetector","key","value","ChecktypeError","inherits","kurentoClient","disguise","checkType","Transaction","TransactionsManager","Filter","register","abstracts","prototype","activateServerEvents","activate","time","callback","transaction","arguments","Array","shift","apply","undefined","required","params","bind","_invoke","areaThreshold","threshold","detectByEvent","event","euclideanDistance","distance","multiScaleFactor","scaleFactor","processXevery4Frames","xper4","sendMetaData","metaData","showFaces","viewFaces","trackThreshold","widthToProcess","width","constructorParams","mediaPipeline","type","events","concat","module","exports","check","FaceInfo","faceInfoDict","name","x","y","height","Object","defineProperties","writable","enumerable","checkFaceInfo","ComplexType","complexTypes","__module__","__type__"],"mappings":"AAAA;AEiCA,QAASC,MAAKC,EAAOC,GAGnB,MAFID,IAAOE,QAAQC,MAAMH,GAElBC,EAgBT,QAASG,oBACPA,iBAAiBC,OAAOC,KAAKC,MAgX/B,QAASC,uBAAsBC,EAAKC,GAElC,KAAKA,YAAiBN,mBACpB,KAAMO,gBAAeF,EAAKL,iBAAkBM,GAtZhD,GAAIE,UAAWd,QAAQ,YAEnBe,cAAgBf,QAAQ,kBAExBgB,SAAWD,cAAcC,SAEzBC,UAAiBF,cAAcE,UAC/BJ,eAAiBI,UAAUJ,eAG3BK,YAAcH,cAAcI,oBAAoBD,YAEhDE,OAASL,cAAcM,SAASC,UAAUF,MAyB9CN,UAASR,iBAAkBc,QAsB3Bd,iBAAiBiB,UAAUC,qBAAuB,SAASC,EAAUC,EAAMC,GACzE,GAAIC,GAAeC,UAAU,YAAcX,aACzBY,MAAMP,UAAUQ,MAAMC,MAAMH,WAC5BI,MAElBhB,WAAU,MAAO,WAAYQ,GAAWS,UAAU,IAClDjB,UAAU,MAAO,OAAQS,GAAOQ,UAAU,GAE1C,IAAIC,IACFV,SAAUA,EACVC,KAAMA,EAKR,OAFAC,IAAYA,GAAY1B,MAAMmC,KAAK3B,MAE5BO,SAASP,KAAK4B,QAAQT,EAAa,uBAAwBO,EAAQR,GAAWlB,OAmBvFH,iBAAiBiB,UAAUe,cAAgB,SAASC,EAAWZ,GAC7D,GAAIC,GAAeC,UAAU,YAAcX,aACzBY,MAAMP,UAAUQ,MAAMC,MAAMH,WAC5BI,MAElBhB,WAAU,MAAO,YAAasB,GAAYL,UAAU,GAEpD,IAAIC,IACFI,UAAWA,EAKb,OAFAZ,IAAYA,GAAY1B,MAAMmC,KAAK3B,MAE5BO,SAASP,KAAK4B,QAAQT,EAAa,gBAAiBO,EAAQR,GAAWlB,OAoBhFH,iBAAiBiB,UAAUiB,cAAgB,SAASC,EAAOd,GACzD,GAAIC,GAAeC,UAAU,YAAcX,aACzBY,MAAMP,UAAUQ,MAAMC,MAAMH,WAC5BI,MAElBhB,WAAU,MAAO,QAASwB,GAAQP,UAAU,GAE5C,IAAIC,IACFM,MAAOA,EAKT,OAFAd,IAAYA,GAAY1B,MAAMmC,KAAK3B,MAE5BO,SAASP,KAAK4B,QAAQT,EAAa,gBAAiBO,EAAQR,GAAWlB,OAsBhFH,iBAAiBiB,UAAUmB,kBAAoB,SAASC,EAAUhB,GAChE,GAAIC,GAAeC,UAAU,YAAcX,aACzBY,MAAMP,UAAUQ,MAAMC,MAAMH,WAC5BI,MAElBhB,WAAU,MAAO,WAAY0B,GAAWT,UAAU,GAElD,IAAIC,IACFQ,SAAUA,EAKZ,OAFAhB,IAAYA,GAAY1B,MAAMmC,KAAK3B,MAE5BO,SAASP,KAAK4B,QAAQT,EAAa,oBAAqBO,EAAQR,GAAWlB,OAmBpFH,iBAAiBiB,UAAUqB,iBAAmB,SAASC,EAAalB,GAClE,GAAIC,GAAeC,UAAU,YAAcX,aACzBY,MAAMP,UAAUQ,MAAMC,MAAMH,WAC5BI,MAElBhB,WAAU,MAAO,cAAe4B,GAAcX,UAAU,GAExD,IAAIC,IACFU,YAAaA,EAKf,OAFAlB,IAAYA,GAAY1B,MAAMmC,KAAK3B,MAE5BO,SAASP,KAAK4B,QAAQT,EAAa,mBAAoBO,EAAQR,GAAWlB,OAmBnFH,iBAAiBiB,UAAUuB,qBAAuB,SAASC,EAAOpB,GAChE,GAAIC,GAAeC,UAAU,YAAcX,aACzBY,MAAMP,UAAUQ,MAAMC,MAAMH,WAC5BI,MAElBhB,WAAU,MAAO,QAAS8B,GAAQb,UAAU,GAE5C,IAAIC,IACFY,MAAOA,EAKT,OAFApB,IAAYA,GAAY1B,MAAMmC,KAAK3B,MAE5BO,SAASP,KAAK4B,QAAQT,EAAa,uBAAwBO,EAAQR,GAAWlB,OAmBvFH,iBAAiBiB,UAAUyB,aAAe,SAASC,EAAUtB,GAC3D,GAAIC,GAAeC,UAAU,YAAcX,aACzBY,MAAMP,UAAUQ,MAAMC,MAAMH,WAC5BI,MAElBhB,WAAU,MAAO,WAAYgC,GAAWf,UAAU,GAElD,IAAIC,IACFc,SAAUA,EAKZ,OAFAtB,IAAYA,GAAY1B,MAAMmC,KAAK3B,MAE5BO,SAASP,KAAK4B,QAAQT,EAAa,eAAgBO,EAAQR,GAAWlB,OAmB/EH,iBAAiBiB,UAAU2B,UAAY,SAASC,EAAWxB,GACzD,GAAIC,GAAeC,UAAU,YAAcX,aACzBY,MAAMP,UAAUQ,MAAMC,MAAMH,WAC5BI,MAElBhB,WAAU,MAAO,YAAakC,GAAYjB,UAAU,GAEpD,IAAIC,IACFgB,UAAWA,EAKb,OAFAxB,IAAYA,GAAY1B,MAAMmC,KAAK3B,MAE5BO,SAASP,KAAK4B,QAAQT,EAAa,YAAaO,EAAQR,GAAWlB,OAmB5EH,iBAAiBiB,UAAU6B,eAAiB,SAASb,EAAWZ,GAC9D,GAAIC,GAAeC,UAAU,YAAcX,aACzBY,MAAMP,UAAUQ,MAAMC,MAAMH,WAC5BI,MAElBhB,WAAU,MAAO,YAAasB,GAAYL,UAAU,GAEpD,IAAIC,IACFI,UAAWA,EAKb,OAFAZ,IAAYA,GAAY1B,MAAMmC,KAAK3B,MAE5BO,SAASP,KAAK4B,QAAQT,EAAa,iBAAkBO,EAAQR,GAAWlB,OAmBjFH,iBAAiBiB,UAAU8B,eAAiB,SAASC,EAAO3B,GAC1D,GAAIC,GAAeC,UAAU,YAAcX,aACzBY,MAAMP,UAAUQ,MAAMC,MAAMH,WAC5BI,MAElBhB,WAAU,MAAO,QAASqC,GAAQpB,UAAU,GAE5C,IAAIC,IACFmB,MAAOA,EAKT,OAFA3B,IAAYA,GAAY1B,MAAMmC,KAAK3B,MAE5BO,SAASP,KAAK4B,QAAQT,EAAa,iBAAkBO,EAAQR,GAAWlB,OAcjFH,iBAAiBiD,mBACfC,eACEC,KAAM,wBACNvB,UAAU,IASd5B,iBAAiBoD,OAAStC,OAAOsC,OAAOC,QAAQ,WAkBhDC,OAAOC,QAAUvD,iBAEjBA,iBAAiBwD,MAAQpD;;AD1azBV,QAAQ;;AGwCR,QAAS+D,UAASC,GAChB,MAAKvD,gBAAgBsD,WAGrBC,EAAeA,MAGf/C,UAAU,SAAU,oBAAqB+C,EAAaC,MAAO/B,UAAU,IACvEjB,UAAU,MAAO,iBAAkB+C,EAAaE,GAAIhC,UAAU,IAC9DjB,UAAU,MAAO,iBAAkB+C,EAAaG,GAAIjC,UAAU,IAC9DjB,UAAU,MAAO,sBAAuB+C,EAAaI,QAASlC,UAAU,IACxEjB,UAAU,MAAO,qBAAsB+C,EAAaV,OAAQpB,UAAU,IAGtE6B,SAASxD,OAAOC,KAAKC,KAAMuD,OAG3BK,QAAOC,iBAAiB7D,MACtBwD,MACEM,UAAU,EACVC,YAAY,EACZ5D,MAAOoD,EAAaC,MAEtBC,GACEK,UAAU,EACVC,YAAY,EACZ5D,MAAOoD,EAAaE,GAEtBC,GACEI,UAAU,EACVC,YAAY,EACZ5D,MAAOoD,EAAaG,GAEtBC,QACEG,UAAU,EACVC,YAAY,EACZ5D,MAAOoD,EAAaI,QAEtBd,OACEiB,UAAU,EACVC,YAAY,EACZ5D,MAAOoD,EAAaV,UAvCf,GAAIS,UAASC,GAkExB,QAASS,eAAc9D,EAAKC,GAE1B,KAAKA,YAAiBmD,WACpB,KAAMlD,gBAAeF,EAAKoD,SAAUnD,GAjGxC,GAAIE,UAAWd,QAAQ,YAEnBe,cAAgBf,QAAQ,kBAExBiB,UAAYF,cAAcE,UAC1BJ,eAAiBI,UAAUJ,eAE3B6D,YAAc3D,cAAcM,SAASsD,aAAaD,WAgEtD5D,UAASiD,SAAUW,aAInBL,OAAOC,iBAAiBP,SAASxC,WAC/BqD,YACEJ,YAAY,EACZ5D,MAAO,oBAETiE,UACEL,YAAY,EACZ5D,MAAO,cAmBXgD,OAAOC,QAAUE,SAEjBA,SAASD,MAAQW;;AD9FjB,GAAIV,UAAW/D,QAAQ,aAGvB6D,SAAQE,SAAWA","file":"bundle.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/**\n * Loader for the kurento-module-nubofacedetector package on the browser\n */\n\nrequire('.');\n","/* Autogenerated with Kurento Idl */\n\n/*\n * (C) Copyright 2013-2015 Kurento (http://kurento.org/)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar inherits = require('inherits');\n\nvar kurentoClient = require('kurento-client');\n\nvar disguise = kurentoClient.disguise;\n\nvar checkType      = kurentoClient.checkType;\nvar ChecktypeError = checkType.ChecktypeError;\n\n\nvar Transaction = kurentoClient.TransactionsManager.Transaction;\n\nvar Filter = kurentoClient.register.abstracts.Filter;\n\n\nfunction noop(error, result) {\n  if (error) console.trace(error);\n\n  return result\n};\n\n\n/**\n * Create an element\n *\n * @classdesc\n *  NuboFaceDetector interface. Documentation about the module\n *\n * @extends module:core/abstracts.Filter\n *\n * @constructor module:nubofacedetector.NuboFaceDetector\n *\n * @fires {@link module:nubofacedetector#event:OnFace OnFace}\n */\nfunction NuboFaceDetector(){\n  NuboFaceDetector.super_.call(this);\n};\ninherits(NuboFaceDetector, Filter);\n\n\n//\n// Public methods\n//\n\n/**\n * The events will be launched to the server with the information about the face\n *\n * @alias module:nubofacedetector.NuboFaceDetector.activateServerEvents\n *\n * @param {external:Integer} activate\n *  1=>activate it, 0 desactivated\n *\n * @param {external:Integer} time\n *  the frequency in ms to send the events\n *\n * @param {module:nubofacedetector.NuboFaceDetector~activateServerEventsCallback} [callback]\n *\n * @return {external:Promise}\n */\nNuboFaceDetector.prototype.activateServerEvents = function(activate, time, callback){\n  var transaction = (arguments[0] instanceof Transaction)\n                  ? Array.prototype.shift.apply(arguments)\n                  : undefined;\n\n  checkType('int', 'activate', activate, {required: true});\n  checkType('int', 'time', time, {required: true});\n\n  var params = {\n    activate: activate,\n    time: time\n  };\n\n  callback = (callback || noop).bind(this)\n\n  return disguise(this._invoke(transaction, 'activateServerEvents', params, callback), this)\n};\n/**\n * @callback module:nubofacedetector.NuboFaceDetector~activateServerEventsCallback\n * @param {external:Error} error\n */\n\n/**\n * To be completed\n *\n * @alias module:nubofacedetector.NuboFaceDetector.areaThreshold\n *\n * @param {external:Integer} threshold\n *   0,1000 (500 default)\n *\n * @param {module:nubofacedetector.NuboFaceDetector~areaThresholdCallback} [callback]\n *\n * @return {external:Promise}\n */\nNuboFaceDetector.prototype.areaThreshold = function(threshold, callback){\n  var transaction = (arguments[0] instanceof Transaction)\n                  ? Array.prototype.shift.apply(arguments)\n                  : undefined;\n\n  checkType('int', 'threshold', threshold, {required: true});\n\n  var params = {\n    threshold: threshold\n  };\n\n  callback = (callback || noop).bind(this)\n\n  return disguise(this._invoke(transaction, 'areaThreshold', params, callback), this)\n};\n/**\n * @callback module:nubofacedetector.NuboFaceDetector~areaThresholdCallback\n * @param {external:Error} error\n */\n\n/**\n * To indicate to the algorithm if process all the images or only when it \n * receives an event\n *\n * @alias module:nubofacedetector.NuboFaceDetector.detectByEvent\n *\n * @param {external:Integer} event\n *  0 (default) => process all the frames without constraints; 1 => process only\n *\n * @param {module:nubofacedetector.NuboFaceDetector~detectByEventCallback} [callback]\n *\n * @return {external:Promise}\n */\nNuboFaceDetector.prototype.detectByEvent = function(event, callback){\n  var transaction = (arguments[0] instanceof Transaction)\n                  ? Array.prototype.shift.apply(arguments)\n                  : undefined;\n\n  checkType('int', 'event', event, {required: true});\n\n  var params = {\n    event: event\n  };\n\n  callback = (callback || noop).bind(this)\n\n  return disguise(this._invoke(transaction, 'detectByEvent', params, callback), this)\n};\n/**\n * @callback module:nubofacedetector.NuboFaceDetector~detectByEventCallback\n * @param {external:Error} error\n */\n\n/**\n * Distance among faces of consecutives faces to delete vibrations produced by \n * little changes of pixels of the same faces. To produce a change in the \n * position and size of the face, the distance between the same face of \n * consecutives frames will have to be higher than this value\n *\n * @alias module:nubofacedetector.NuboFaceDetector.euclideanDistance\n *\n * @param {external:Integer} distance\n *   0,20 (8 default)\n *\n * @param {module:nubofacedetector.NuboFaceDetector~euclideanDistanceCallback} [callback]\n *\n * @return {external:Promise}\n */\nNuboFaceDetector.prototype.euclideanDistance = function(distance, callback){\n  var transaction = (arguments[0] instanceof Transaction)\n                  ? Array.prototype.shift.apply(arguments)\n                  : undefined;\n\n  checkType('int', 'distance', distance, {required: true});\n\n  var params = {\n    distance: distance\n  };\n\n  callback = (callback || noop).bind(this)\n\n  return disguise(this._invoke(transaction, 'euclideanDistance', params, callback), this)\n};\n/**\n * @callback module:nubofacedetector.NuboFaceDetector~euclideanDistanceCallback\n * @param {external:Error} error\n */\n\n/**\n * Specify how much the image size is reduced at each haar image \n *\n * @alias module:nubofacedetector.NuboFaceDetector.multiScaleFactor\n *\n * @param {external:Integer} scaleFactor\n *  5-50 (25 default)\n *\n * @param {module:nubofacedetector.NuboFaceDetector~multiScaleFactorCallback} [callback]\n *\n * @return {external:Promise}\n */\nNuboFaceDetector.prototype.multiScaleFactor = function(scaleFactor, callback){\n  var transaction = (arguments[0] instanceof Transaction)\n                  ? Array.prototype.shift.apply(arguments)\n                  : undefined;\n\n  checkType('int', 'scaleFactor', scaleFactor, {required: true});\n\n  var params = {\n    scaleFactor: scaleFactor\n  };\n\n  callback = (callback || noop).bind(this)\n\n  return disguise(this._invoke(transaction, 'multiScaleFactor', params, callback), this)\n};\n/**\n * @callback module:nubofacedetector.NuboFaceDetector~multiScaleFactorCallback\n * @param {external:Error} error\n */\n\n/**\n * process x every 4 frames\n *\n * @alias module:nubofacedetector.NuboFaceDetector.processXevery4Frames\n *\n * @param {external:Integer} xper4\n *  1,2,3,4 (default) => process x frames every 4 frames\n *\n * @param {module:nubofacedetector.NuboFaceDetector~processXevery4FramesCallback} [callback]\n *\n * @return {external:Promise}\n */\nNuboFaceDetector.prototype.processXevery4Frames = function(xper4, callback){\n  var transaction = (arguments[0] instanceof Transaction)\n                  ? Array.prototype.shift.apply(arguments)\n                  : undefined;\n\n  checkType('int', 'xper4', xper4, {required: true});\n\n  var params = {\n    xper4: xper4\n  };\n\n  callback = (callback || noop).bind(this)\n\n  return disguise(this._invoke(transaction, 'processXevery4Frames', params, callback), this)\n};\n/**\n * @callback module:nubofacedetector.NuboFaceDetector~processXevery4FramesCallback\n * @param {external:Error} error\n */\n\n/**\n * The faces detected (x,y,width,height) are sent as metadata \n *\n * @alias module:nubofacedetector.NuboFaceDetector.sendMetaData\n *\n * @param {external:Integer} metaData\n *  0 (default) => metadata are not sent; 1 => metadata are sent\n *\n * @param {module:nubofacedetector.NuboFaceDetector~sendMetaDataCallback} [callback]\n *\n * @return {external:Promise}\n */\nNuboFaceDetector.prototype.sendMetaData = function(metaData, callback){\n  var transaction = (arguments[0] instanceof Transaction)\n                  ? Array.prototype.shift.apply(arguments)\n                  : undefined;\n\n  checkType('int', 'metaData', metaData, {required: true});\n\n  var params = {\n    metaData: metaData\n  };\n\n  callback = (callback || noop).bind(this)\n\n  return disguise(this._invoke(transaction, 'sendMetaData', params, callback), this)\n};\n/**\n * @callback module:nubofacedetector.NuboFaceDetector~sendMetaDataCallback\n * @param {external:Error} error\n */\n\n/**\n * Show or Hide the faces in the video stream\n *\n * @alias module:nubofacedetector.NuboFaceDetector.showFaces\n *\n * @param {external:Integer} viewFaces\n *  Determines wheter the detected faces will be displayed or not\n *\n * @param {module:nubofacedetector.NuboFaceDetector~showFacesCallback} [callback]\n *\n * @return {external:Promise}\n */\nNuboFaceDetector.prototype.showFaces = function(viewFaces, callback){\n  var transaction = (arguments[0] instanceof Transaction)\n                  ? Array.prototype.shift.apply(arguments)\n                  : undefined;\n\n  checkType('int', 'viewFaces', viewFaces, {required: true});\n\n  var params = {\n    viewFaces: viewFaces\n  };\n\n  callback = (callback || noop).bind(this)\n\n  return disguise(this._invoke(transaction, 'showFaces', params, callback), this)\n};\n/**\n * @callback module:nubofacedetector.NuboFaceDetector~showFacesCallback\n * @param {external:Error} error\n */\n\n/**\n * To be completed\n *\n * @alias module:nubofacedetector.NuboFaceDetector.trackThreshold\n *\n * @param {external:Integer} threshold\n *   0,100 (30 default)\n *\n * @param {module:nubofacedetector.NuboFaceDetector~trackThresholdCallback} [callback]\n *\n * @return {external:Promise}\n */\nNuboFaceDetector.prototype.trackThreshold = function(threshold, callback){\n  var transaction = (arguments[0] instanceof Transaction)\n                  ? Array.prototype.shift.apply(arguments)\n                  : undefined;\n\n  checkType('int', 'threshold', threshold, {required: true});\n\n  var params = {\n    threshold: threshold\n  };\n\n  callback = (callback || noop).bind(this)\n\n  return disguise(this._invoke(transaction, 'trackThreshold', params, callback), this)\n};\n/**\n * @callback module:nubofacedetector.NuboFaceDetector~trackThresholdCallback\n * @param {external:Error} error\n */\n\n/**\n * this will be the width of the image that the algorithm is going to process to\n *\n * @alias module:nubofacedetector.NuboFaceDetector.widthToProcess\n *\n * @param {external:Integer} width\n *  160,320 (default),480,640\n *\n * @param {module:nubofacedetector.NuboFaceDetector~widthToProcessCallback} [callback]\n *\n * @return {external:Promise}\n */\nNuboFaceDetector.prototype.widthToProcess = function(width, callback){\n  var transaction = (arguments[0] instanceof Transaction)\n                  ? Array.prototype.shift.apply(arguments)\n                  : undefined;\n\n  checkType('int', 'width', width, {required: true});\n\n  var params = {\n    width: width\n  };\n\n  callback = (callback || noop).bind(this)\n\n  return disguise(this._invoke(transaction, 'widthToProcess', params, callback), this)\n};\n/**\n * @callback module:nubofacedetector.NuboFaceDetector~widthToProcessCallback\n * @param {external:Error} error\n */\n\n\n/**\n * @alias module:nubofacedetector.NuboFaceDetector.constructorParams\n *\n * @property {module:core.MediaPipeline} mediaPipeline\n *  the parent {@link module:core.MediaPipeline MediaPipeline}\n */\nNuboFaceDetector.constructorParams = {\n  mediaPipeline: {\n    type: 'kurento.MediaPipeline',\n    required: true\n  }\n};\n\n/**\n * @alias module:nubofacedetector.NuboFaceDetector.events\n *\n * @extends module:core/abstracts.Filter.events\n */\nNuboFaceDetector.events = Filter.events.concat(['OnFace']);\n\n\n/**\n * Checker for {@link module:nubofacedetector.NuboFaceDetector}\n *\n * @memberof module:nubofacedetector\n *\n * @param {external:String} key\n * @param {module:nubofacedetector.NuboFaceDetector} value\n */\nfunction checkNuboFaceDetector(key, value)\n{\n  if(!(value instanceof NuboFaceDetector))\n    throw ChecktypeError(key, NuboFaceDetector, value);\n};\n\n\nmodule.exports = NuboFaceDetector;\n\nNuboFaceDetector.check = checkNuboFaceDetector;\n","/* Autogenerated with Kurento Idl */\n\n/*\n * (C) Copyright 2013-2015 Kurento (http://kurento.org/)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Media API for the Kurento Web SDK\n *\n * @module nubofacedetector/complexTypes\n *\n * @copyright 2013-2015 Kurento (http://kurento.org/)\n * @license ALv2\n */\n\nvar FaceInfo = require('./FaceInfo');\n\n\nexports.FaceInfo = FaceInfo;\n","/* Autogenerated with Kurento Idl */\n\n/*\n * (C) Copyright 2013-2015 Kurento (http://kurento.org/)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar inherits = require('inherits');\n\nvar kurentoClient = require('kurento-client');\n\nvar checkType = kurentoClient.checkType;\nvar ChecktypeError = checkType.ChecktypeError;\n\nvar ComplexType = kurentoClient.register.complexTypes.ComplexType;\n\n\n/**\n * FaceInfo contains information about the detected face\n *\n * @constructor module:nubofacedetector/complexTypes.FaceInfo\n *\n * @property {external:String} name\n *  This value contains the word face in order to identify the register\n * @property {external:Integer} x\n *  represent the x value of the upper left corner of the face \n * @property {external:Integer} y\n *  represent the y value of the upper left corner of the face \n * @property {external:Integer} height\n *  Represent the height of the detected face\n * @property {external:Integer} width\n *  Represent the width of the detected face\n */\nfunction FaceInfo(faceInfoDict){\n  if(!(this instanceof FaceInfo))\n    return new FaceInfo(faceInfoDict)\n\n  faceInfoDict = faceInfoDict || {}\n\n  // Check faceInfoDict has the required fields\n  checkType('String', 'faceInfoDict.name', faceInfoDict.name, {required: true});\n  checkType('int', 'faceInfoDict.x', faceInfoDict.x, {required: true});\n  checkType('int', 'faceInfoDict.y', faceInfoDict.y, {required: true});\n  checkType('int', 'faceInfoDict.height', faceInfoDict.height, {required: true});\n  checkType('int', 'faceInfoDict.width', faceInfoDict.width, {required: true});\n\n  // Init parent class\n  FaceInfo.super_.call(this, faceInfoDict)\n\n  // Set object properties\n  Object.defineProperties(this, {\n    name: {\n      writable: true,\n      enumerable: true,\n      value: faceInfoDict.name\n    },\n    x: {\n      writable: true,\n      enumerable: true,\n      value: faceInfoDict.x\n    },\n    y: {\n      writable: true,\n      enumerable: true,\n      value: faceInfoDict.y\n    },\n    height: {\n      writable: true,\n      enumerable: true,\n      value: faceInfoDict.height\n    },\n    width: {\n      writable: true,\n      enumerable: true,\n      value: faceInfoDict.width\n    }\n  })\n}\ninherits(FaceInfo, ComplexType)\n\n// Private identifiers to allow re-construction of the complexType on the server\n// They need to be enumerable so JSON.stringify() can access to them\nObject.defineProperties(FaceInfo.prototype, {\n  __module__: {\n    enumerable: true,\n    value: \"nubofacedetector\"\n  },\n  __type__: {\n    enumerable: true,\n    value: \"FaceInfo\"\n  }\n})\n\n/**\n * Checker for {@link module:nubofacedetector/complexTypes.FaceInfo}\n *\n * @memberof module:nubofacedetector/complexTypes\n *\n * @param {external:String} key\n * @param {module:nubofacedetector/complexTypes.FaceInfo} value\n */\nfunction checkFaceInfo(key, value)\n{\n  if(!(value instanceof FaceInfo))\n    throw ChecktypeError(key, FaceInfo, value);\n};\n\n\nmodule.exports = FaceInfo;\n\nFaceInfo.check = checkFaceInfo;\n"]}